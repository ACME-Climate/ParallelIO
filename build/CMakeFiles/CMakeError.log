Determining if the system is big endian passed with the following output:
Change Dir: /home/tkurc/codar/e3sm/pio_adios1/ParallelIO/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/gmake "cmTryCompileExec3487859590/fast"
/usr/bin/gmake -f CMakeFiles/cmTryCompileExec3487859590.dir/build.make CMakeFiles/cmTryCompileExec3487859590.dir/build
gmake[1]: Entering directory `/home/tkurc/codar/e3sm/pio_adios1/ParallelIO/build/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /home/tkurc/codar/e3sm/pio_adios1/ParallelIO/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3487859590.dir/TestEndianess.c.o
/usr/lib64/openmpi/bin/mpicc   -g -fPIC     -o CMakeFiles/cmTryCompileExec3487859590.dir/TestEndianess.c.o   -c /home/tkurc/codar/e3sm/pio_adios1/ParallelIO/build/CMakeFiles/CMakeTmp/TestEndianess.c
Linking C executable cmTryCompileExec3487859590
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3487859590.dir/link.txt --verbose=1
/usr/lib64/openmpi/bin/mpicc  -g -fPIC      CMakeFiles/cmTryCompileExec3487859590.dir/TestEndianess.c.o  -o cmTryCompileExec3487859590 -rdynamic 
gmake[1]: Leaving directory `/home/tkurc/codar/e3sm/pio_adios1/ParallelIO/build/CMakeFiles/CMakeTmp'

TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


